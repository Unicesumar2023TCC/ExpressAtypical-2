generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  profile      Profile[]
  category     Category[]
  name         String    @db.VarChar(50)
  email        String    @db.VarChar(50)
  password     String    
  birthDate    DateTime
  phone        String    @db.VarChar(20)
  status       Status    @default(ACTIVE)
  type         TypeUser  @default(Responsible)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deleted      Boolean   @default(false)
  Log          Log[]
}

model Profile {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [idUser], references: [id])
  idUser       Int
  name         String    @db.VarChar(50)
  birthDate    DateTime
  status       Status    @default(ACTIVE)
  type         TypeProfile @default(Responsible)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deleted      Boolean   @default(false)
}

model Category {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [idUser], references: [id])
  idUser       Int
  word         Word[]
  name         String    @db.VarChar(50)
  voiceUrl     String?   @db.VarChar(50)
  status       Status    @default(ACTIVE)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deleted      Boolean   @default(false)
}

model Word {
  id            Int       @id @default(autoincrement())
  category      Category  @relation(fields: [idCategory], references: [id])
  idCategory    Int
  name          String    @db.VarChar(50)
  voiceUrl      String?   @db.VarChar(50)
  status        Status    @default(ACTIVE)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deleted       Boolean   @default(false)
}

model Log {
  id             Int       @id @default(autoincrement())
  user           User      @relation(fields: [idUser], references: [id])
  idUser     Int       @map("idUser") // Specify the database column name
  idReference    Int       
  origem         String    @db.VarChar(50)
  action         String    @db.VarChar(50)
  time           DateTime
}

enum Status {
  ACTIVE
  DISABLE
  BLOCK
}

enum TypeUser {
  Admin
  Responsible
}

enum TypeProfile {
  Kid
  Responsible
}
